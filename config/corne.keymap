#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt { tapping-term-ms = <500>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------
            // |  Q  |  W  |  F  |  P  |  G  |   |  J  |  L  |  U  |  Y  |  ;  |
            // |  A  |  R  |  S  |  T  |  D  |   |  H  |  N  |  E  |  I  |  O  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  K  |  M  |  ,  |  .  |  /  |
            //             | GUI | LWR | SPC |   | ENT | RSE | BKSP|

            bindings = <
&kp Q        &kp W           &kp F         &kp P  &kp G &none        &none &kp J    &kp L  &kp U          &kp Y            &kp SEMI     
&mt LSHFT A  &mt LEFT_ALT R  &mt LCTRL S   &kp T  &kp D &none        &none &kp H    &kp N  &mt RCTRL E    &mt RIGHT_ALT I  &mt RSHFT O  
&kp Z        &kp X           &kp C         &kp V  &kp B &none        &none &kp K    &kp M  &kp COMMA      &kp DOT          &kp FSLH     
                                    &kp LEFT_WIN  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp BACKSPACE
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------
            // |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
            // | TAB |     | UP  |     | PUP |   |  [  |  ]  |  :  |  \  |  `  |
            // | SHT | LFT | DWN | RGT | PDN |   |  -  |  =  |  ,  |  .  | CAP |
            //             | GUI | LWR | SPC |   | ENT | RSE | BKSP|

            bindings = <
&none  &kp NUMBER_1  &kp NUMBER_2    &kp NUMBER_3    &kp NUMBER_4     &kp NUMBER_5     &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8      &kp NUMBER_9       &kp NUMBER_0   &none
&none  &kp TAB       &trans          &kp UP_ARROW    &trans           &kp PAGE_UP      &kp MINUS     &kp EQUAL     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH  &none
&none  &kp LSHFT     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN    &kp GRAVE     &trans        &trans            &trans             &kp CAPSLOCK   &none
                                     &trans          &trans           &kp SPACE        &kp RET       &trans        &trans
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------
            // |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
            // | VDN | VUP | PLY | PRV | NXT |   |  -  |  =  |  [  |  ]  |  \  |
            // | BDN | BUP | MTE |     |     |   |  _  |  +  |  {  |  }  |  |  |
            //             | GUI | LWR | SPC |   | ENT | RSE | BKSP|

            bindings = <
&none  &kp EXCL           &kp AT           &kp HASH          &kp DLLR        &kp PRCNT     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &none
&none  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp C_NEXT    &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &none
&none  &kp C_BRI_DEC      &kp C_BRI_INC    &kp C_MUTE        &trans          &trans        &trans     &trans     &trans     &trans    &trans    &none
                                           &trans            &trans          &kp SPACE     &kp RET    &trans     &trans
            >;
        };

        layer_3 {
            // ------------------------------------------------------------------
            // |  F2 |  F3 |  F4 |  F5 |  F6 |   |  F7 |  F8 |  F9 | F10 | F11 |
            // |  F1 |     |     |     |     |   |     |     |     |     | F12 |
            // |     |     |     |     |     |   |     |     |     |     |     |
            //             | GUI | LWR | SPC |   | ENT | RSE | BKSP|

            bindings = <
&none  &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp F7      &kp F8  &kp F9  &kp F10  &kp F11  &none
&none  &kp F1        &trans        &trans        &trans        &trans          &trans      &trans  &trans  &trans   &kp F12  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_CLR  &trans  &trans  &trans   &trans   &none
                                   &trans        &trans        &trans          &trans      &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        fourth {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
